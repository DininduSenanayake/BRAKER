# Katharina J. Hoff
# October 12th 2017
# Example data for BRAKER2 with RNA-Seq & proteins (GeneMark-ET training with RNA-Seq)

# downloaded proteins of d. ana from flybase (ftp://ftp.flybase.net/releases/FB2017_04/dana_r1.05/fasta/dana-all-translation-r1.05.fasta.gz) because accessing data from the tape archiving robot takes way too much time.

grep -c ">" dana-all-translation-r1.05.fasta # 21191

cat dana-all-translation-r1.05.fasta | perl -ne 'if(m/>/){@t=split; print $t[0]."\n";}else{print $_;}' > proteins.fa

startAlign.pl --genome=/home/katharina/SVN/braker/trunks/example/example.fa --prot=/home/katharina/braker_test/Drosophila_melanogaster_6/data/proteins/proteins.fa--ALIGNMENT_TOOL_PATH=/home/katharina/gth/bin --prg=gth

# the following has not been executed, yet
cat align_gth/gth.concat.aln | perl -ne 'if(m/Target=(.*)\s\d/){@t = split(/\s/, $1); print $t[0]."\n";}' | sort -u > proteins.lst

cdbfasta proteins.fa -o proteins.fa.idx

cat proteins.lst | cdbyank proteins.fa.idx -d proteins.fa > example_proteins.fa

# create example bam file
export PATH=$PATH:/home/tool:/home/tool/tophat2:/home/tool/bowtie2:
p="/nas-hs/projs/braker/topaz/storage3/braker/Drosophila_melanogaster/arx"

cdbfasta genome.fa -o genome.fa.idx

# retrieve only a part of chr2 sequence: 1:8000000

cdbyank genome.fa.idx -d genome.fa -a '2R 1 8000000' -R > genome.small.fa

mv genome.small.fa genome.fa

bowtie2-build genome.fa fly

tophat2  --num-threads 4  --microexon-search  --mate-std-dev 26  --mate-inner-dist 38  --min-intron-length 30  --min-coverage-intron 30 --min-segment-intron 30   -o ./tophat_out fly   $p/SRR023505_1.fastq,$p/SRR023546_1.fastq,$p/SRR023608_1.fastq,$p/SRR026433_1.fastq,$p/SRR027108_1.fastq  $p/SRR023505_2.fastq,$p/SRR023546_2.fastq,$p/SRR023608_2.fastq,$p/SRR026433_2.fastq,$p/SRR027108_2.fastq


bam2hints --intronsonly --in accepted_hits.bam --out RNAseq.hints


















# May 18th 2018
# Want to build a smaller example because runtime for testing is to big


cdbfasta genome.fa -o genome.fa.idx

# retrieve only a part of chr2 sequence: 1:8000000

cdbyank genome.fa.idx -d genome.fa -a '2R 1 8000000' -R > genome.small.fa

mv genome.small.fa genome.fa

bowtie2-build genome.fa fly
wget http://bioinf.uni-greifswald.de/augustus/binaries/tutorial/data/rgasp_fly_2R.fastq.gz
gunzip rgasp_fly_2R.fastq.gz
cat rgasp_fly_2R.fastq | splitFRfastq.pl

tophat2  --num-threads 6  --microexon-search --mate-std-dev 26 --mate-inner-dist 38 --min-intron-length 30 --min-coverage-intron 30 --min-segment-intron 30 -o ./tophat_out fly R1.fastq,R2.fastq

cd tophat_out
bam2hints --intronsonly --in accepted_hits.bam --out RNAseq.hints



# get rnaseq reads from rgasp that map to 2R
wget http://bioinf.uni-greifswald.de/augustus/binaries/tutorial/data/rgasp_fly_2R.fastq.gz
gunzip rgasp_fly_2R.fastq.gz

mkdir star_genome
STAR --runMode genomeGenerate --genomeDir star_genome --genomeFastaFiles genome.fa
STAR --genomeDir star_genome --readFilesIn rgasp_fly_2R.fastq  --runThreadN 10
samtools view -Sb Aligned.out.sam > RNAseq.bam

bam2hints RNAseq.bam --intronsonly --in RNAseq.bam --out=RNAseq.hints





cat ep.hints | perl -ne '@t = split(/\t/); if($t[3]>=1 && $t[3]<=8000000 && $t[4]>=1 && $t[4]<=8000000){print $_;}' > ep.small.hints


# August 15th 2018
# Problems have been reported with the example data set; there is apparently no overlap between EP and ET hints
# Therefore make a new, slightly bigger example data set

scp braker@topaz.gatech.edu:/home/braker/project2/Drosophila_melanogaster/data/genome.RMsoft.fasta .

cdbfasta genome.RMsoft.fasta -o genome.RMsoft.fa.idx

# retrieve only a part of chr2 sequence: 1:12000000

cdbyank genome.RMsoft.fa.idx -d genome.RMsoft.fasta -a '2R 1 12000000' -R > genome.small.fa

mv genome.small.fa genome.fa

# FINAL GENOME FILE: genome.fa

scp braker@topaz.gatech.edu:/storage3/braker/Drosophila_melanogaster/protm/output/introns.w_gvwpa.gff .
grep ^2R introns.w_gvwpa.gff | perl -ne '@t = split(/\t/); if($t[4] <= 12000000){print $_;}' > ep.hints
cat ep.hints | perl -ne '@t = split(/\t/);
print "$t[0]\t$t[1]\tintron\t$t[3]\t$t[4]\t$t[5]\t$t[6]\t$t[7]\tsrc=P;mult=$t[5];\n";' > ep.f.hints
mv ep.f.hints ep.hints

# FINAL EP HINTS FILE: ep.hints

p="/nas-hs/projs/braker/topaz/storage3/braker/Drosophila_melanogaster/arx"
mkdir star_genome
STAR --runMode genomeGenerate --genomeDir star_genome --genomeFastaFiles genome.fa
STAR --genomeDir star_genome --readFilesIn $p/SRR023505_1.fastq  $p/SRR023505_2.fastq --runThreadN 10
samtools view -bS Aligned.out.sam > RNAseq.bam
bam2hints --intronsonly --in RNAseq.bam --out RNAseq.hints
# check wether the no overlap problem persists or is gone:
cat RNAseq.hints | perl -ne '@t = split(/\t/); print "$t[3]_$t[4]\n";' > rnaseq.lst
cat ep.hints | perl -ne '@t = split(/\t/); print "$t[3]_$t[4]\n";' > ep.lst
overlapStat.pl rnaseq.lst ep.lst
# looks ok. Check whether there is an overlap with sufficient coverage
cat ep.hints | perl -ne 'if(m/mult=(\d+)/){if($1>10){print $_;}}' > ep.h.hints
cat RNAseq.hints |  perl -ne 'if(m/mult=(\d+)/){if($1>10){print $_;}}' > RNAseq.h.hints
cat RNAseq.h.hints | perl -ne '@t = split(/\t/); print "$t[3]_$t[4]\n";' > rnaseq.lst
cat ep.h.hints | perl -ne '@t = split(/\t/); print "$t[3]_$t[4]\n";' > ep.lst
overlapStat.pl rnaseq.lst ep.lst
# yes, ok!

# FINAL RNASEQ BAM FILE: RNAseq.bam, RNAseq.hints